//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductManagement.ProductServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceReference.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetUserList", ReplyAction="http://tempuri.org/IProductService/GetUserListResponse")]
        ModelController.Login.Logins[] GetUserList(ModelController.Login.Logins objLogin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetCategoryList", ReplyAction="http://tempuri.org/IProductService/GetCategoryListResponse")]
        ModelController.Categories.Category[] GetCategoryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SearchCategories", ReplyAction="http://tempuri.org/IProductService/SearchCategoriesResponse")]
        ModelController.Categories.Category[] SearchCategories(ModelController.Categories.Category objCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/InsertCategory", ReplyAction="http://tempuri.org/IProductService/InsertCategoryResponse")]
        int InsertCategory(ModelController.Categories.Category objCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateCategory", ReplyAction="http://tempuri.org/IProductService/UpdateCategoryResponse")]
        int UpdateCategory(ModelController.Categories.Category objCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteCategory", ReplyAction="http://tempuri.org/IProductService/DeleteCategoryResponse")]
        int DeleteCategory(ModelController.Categories.Category objCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProducts", ReplyAction="http://tempuri.org/IProductService/GetProductsResponse")]
        ModelController.Prodoucts.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetRowCountService", ReplyAction="http://tempuri.org/IProductService/GetRowCountServiceResponse")]
        int GetRowCountService();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductData", ReplyAction="http://tempuri.org/IProductService/GetProductDataResponse")]
        ModelController.Prodoucts.Product[] GetProductData(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductListDetails", ReplyAction="http://tempuri.org/IProductService/GetProductListDetailsResponse")]
        ModelController.Prodoucts.Product[] GetProductListDetails(ModelController.Prodoucts.Product objProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/SearchProducts", ReplyAction="http://tempuri.org/IProductService/SearchProductsResponse")]
        ModelController.Prodoucts.Product[] SearchProducts(ModelController.Prodoucts.Product objProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/InsertProduct", ReplyAction="http://tempuri.org/IProductService/InsertProductResponse")]
        int InsertProduct(ModelController.Prodoucts.Product objProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/DeleteProduct", ReplyAction="http://tempuri.org/IProductService/DeleteProductResponse")]
        int DeleteProduct(ModelController.Prodoucts.Product objProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/UpdateProduct", ReplyAction="http://tempuri.org/IProductService/UpdateProductResponse")]
        int UpdateProduct(ModelController.Prodoucts.Product objProduct);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : ProductManagement.ProductServiceReference.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<ProductManagement.ProductServiceReference.IProductService>, ProductManagement.ProductServiceReference.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ModelController.Login.Logins[] GetUserList(ModelController.Login.Logins objLogin) {
            return base.Channel.GetUserList(objLogin);
        }
        
        public ModelController.Categories.Category[] GetCategoryList() {
            return base.Channel.GetCategoryList();
        }
        
        public ModelController.Categories.Category[] SearchCategories(ModelController.Categories.Category objCategory) {
            return base.Channel.SearchCategories(objCategory);
        }
        
        public int InsertCategory(ModelController.Categories.Category objCategory) {
            return base.Channel.InsertCategory(objCategory);
        }
        
        public int UpdateCategory(ModelController.Categories.Category objCategory) {
            return base.Channel.UpdateCategory(objCategory);
        }
        
        public int DeleteCategory(ModelController.Categories.Category objCategory) {
            return base.Channel.DeleteCategory(objCategory);
        }
        
        public ModelController.Prodoucts.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public int GetRowCountService() {
            return base.Channel.GetRowCountService();
        }
        
        public ModelController.Prodoucts.Product[] GetProductData(int pageIndex, int pageSize) {
            return base.Channel.GetProductData(pageIndex, pageSize);
        }
        
        public ModelController.Prodoucts.Product[] GetProductListDetails(ModelController.Prodoucts.Product objProduct) {
            return base.Channel.GetProductListDetails(objProduct);
        }
        
        public ModelController.Prodoucts.Product[] SearchProducts(ModelController.Prodoucts.Product objProduct) {
            return base.Channel.SearchProducts(objProduct);
        }
        
        public int InsertProduct(ModelController.Prodoucts.Product objProduct) {
            return base.Channel.InsertProduct(objProduct);
        }
        
        public int DeleteProduct(ModelController.Prodoucts.Product objProduct) {
            return base.Channel.DeleteProduct(objProduct);
        }
        
        public int UpdateProduct(ModelController.Prodoucts.Product objProduct) {
            return base.Channel.UpdateProduct(objProduct);
        }
    }
}
